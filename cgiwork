#!/bin/bash

#######################################################################
#                                                                     #
#                               CGIWork                               #
#                                                                     #
#  Description: Replace shell variables into an output file, keeping  #
#               your output files and shell scripts separated.        #
#                                                                     #
#  Usage: cgiwork "${ARRAY[@]}"                                       #
#                                                                     #
#  Important: The output file must be the first element of the array  #
#  Example of array: ARRAY=("templates/example.html");                #
#                    ARRAY+=("variable1=value1");                     #
#                    ARRAY+=("variable2=value2");                     #
#                                                                     #
#  Author: LBezerril                                                  #
#  To see the documentation, visit: github.com/LBezerril/CGIWork      #
#                                                                     #
#                                                                     #
#######################################################################

KEY_VALUE_ARRAY=( "$@" );
OUTPUT_FILE="${KEY_VALUE_ARRAY[0]}" && unset KEY_VALUE_ARRAY[0];
MESSAGE_ERROR="CGIWork Error:";

if [[ ! -f "$OUTPUT_FILE" ]]; then
	echo "$MESSAGE_ERROR Output file does not exist! Be sure to pass the output file as the first element of the array.";
	exit 1;
elif [[ ! -r "$OUTPUT_FILE" ]]; then
	echo "$MESSAGE_ERROR Output file is not readable!";
	exit 1;
fi;

function replace_variables() {
	for key_value in "${KEY_VALUE_ARRAY[@]}"; do
		local key="$(echo "$key_value" | cut -d= -f1)"; #local key="$(echo "$key_value" | grep -o "^.[^=]*")";
		local value="$(echo "$key_value" | cut -d= -f2-)";
		key="\${$key}";
		value="$(echo "${value}" | sed 's/\\/\\\\/g;s/\//\\\//g;s/&/\\&/g')";
		local sedexpression+="s/${key}/${value}/g;";
	done;
	cat "$OUTPUT_FILE" | sed "$sedexpression";
}

replace_variables;
