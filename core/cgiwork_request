#!/bin/sh

# Retorna o método utilizado na requisição.
__get_method() {
  # Caso não encontrado, retorna exit status 1.
  [ -z "$REQUEST_METHOD" ] && return 1 || echo "$REQUEST_METHOD"
}

# Retorna o URI utilizado na requisição.
__get_uri() {
  # Caso não encontrado, retorna exit status 1.
  [ -z "$REQUEST_URI" ] && return 1 || echo "$REQUEST_URI"
}

# Retorna o protocolo utilizado na requisição.
__get_protocol() {
  # Caso não encontrado, retorna exit status 1.
  [ -z "$SERVER_PROTOCOL" ] && return 1 || echo "$SERVER_PROTOCOL"
}

# Retorna o valor do parâmetro passado. Se nehum parâmetro for passado, retorna
# todos no formato key=value, um em cada linha.
__get_parameters() {
  # $1: Nome do parâmetro a ser buscado (opcional).

  # Caso não encontrado, retorna exit status 1.
  [ -z "$QUERY_STRING" ] && return 1

  echo "$QUERY_STRING" | tr '&+' '\n ' |
  (
    # Caso nenhum parâmetro for passado, retorna o stdout da pipe.
    [ -z "$1" ] && cat - ||
    (
      # Caso o parâmetro for passado, procura o valor dele.
      while read __parameter; do
        local __parameter_key="$(echo "$__parameter" | cut -d'=' -f1)"
        local __parameter_value="$(echo "$__parameter" | cut -d'=' -f2-)"
        [ "$1" = "$__parameter_key" ] && echo "$__parameter_value" && return 0
      done

      # Caso o parâmetro passado não foi encontrado, retorna exit status 1.
      return 1
    )
  )
}

# TODO
__get_headers() {
  # $1: Nome do header a ser buscado (opcional).

  # Função interna.
  __get_content_type() {
    echo $CONTENT_TYPE
  }

  # Função interna.
  __get_content_length() {
    echo $CONTENT_LENGTH
  }

  # Função interna que retorna o par "Chave: valor" do header a partir da
  # declaração de variável informada.
  __get_header_by_var() {
    # $1: Declaração da variável. Exemplo: (HTTP_USER_AGENT=curl/7.38.0).

    # TODO TU para "Header: sem hífen" e "Header-Com: hífen"
    local header_key="$(echo "$1" | \
      cut -d'=' -f1 | \
      sed "s/^HTTP_//" | \
      tr '[:upper:]_' '[:lower:]-')"
      # | TODO: Camel-Case

    local header_value="$(echo "$1" | cut -d'=' -f2-)"

    echo "$header_key: $header_value"
  }

  env | while read header; do
    case "$header" in
      HTTP_*=*)
        # User-Agent: curl/7.38.0
        echo "$(__get_header_by_var "$header")" | [ -z "$1" ] && cat - ||
          (true && return)
        echo b
        echo c;;
    esac
  done

  # TODO: TU para essas funções:
  # Cuidado com o return :)
  unset -f __get_content_type __get_content_length __get_header_by_var
}

# Retorna o valor do cookie passado. Se nehum cookie for passado, retorna todos
# no formato key=value, um em cada linha.
__get_cookies() {
  # $1: Nome do cookie a ser buscado (opcional).

  # Caso não encontrado, retorna exit status 1.
  [ -z "$HTTP_COOKIE" ] && return 1
}



# TODO: __get_body - Como pegar arquivo de upload ?
# TODO: Obter informações de rede da requisição

# Referência: https://www.tutorialspoint.com/http/http_requests.htm
