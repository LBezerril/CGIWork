OUTPUT_FILE="$(get_property file)";

function get_sedexpression_replace() {
	for key_value in "${ARRAY[@]}"; do
		local key="$(echo "$key_value" | cut -d= -f1)"; #local key="$(echo "$key_value" | grep -o "^.[^=]*")";
		local value="$(echo "$key_value" | cut -d= -f2-)";
		key="\${$key}";
		value="$(echo "${value}" | sed 's/\\/\\\\/g;s/\//\\\//g;s/&/\\&/g')";
		local sedexpression+="s/${key}/${value}/g;";
	done;
	echo "$sedexpression";
}

if var_is_null "$OUTPUT_FILE"; then
	while read line; do
		echo "$line";
	done;
else
	if [[ ! -f "$OUTPUT_FILE" ]]; then
		echo "$MESSAGE_ERROR Output file does not exist!";
		exit 1;
	elif [[ ! -r "$OUTPUT_FILE" ]]; then
		echo "$MESSAGE_ERROR Output file is not readable!";
		exit 1;
	fi;
	cat "$OUTPUT_FILE";
fi | sed "$(get_sedexpression_replace)";
